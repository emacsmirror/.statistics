:PREAMBLE:
#+title: Epkgs: Issues
#+setupfile: .orgconfig
#+name: setup
#+begin_src emacs-lisp :results silent
  (require 'emir)
#+end_src
#+name: addheader
#+header: :var header="" :var rows=""
#+begin_src elisp :hlines yes :results none
  (epkg-add-org-header rows header)
#+end_src
[[https://emacsmirror.net/stats][up]]
:END:
* Features provided by multiple packages
:PROPERTIES:
:ID:       e4c34285-f734-4953-b929-acfc1a9c0730
:END:
#+name: conflict
#+begin_src emacs-lisp :post addheader('("Feature" "Package" "Shelved"),*this*)
  (let (alist)
    (dolist (name (epkgs 'name))
      (dolist (feature (epkg-sql [:select feature :from provided
                                  :where (and (= package $s1)
                                              (isnull drop))]
                                 name))
        (setq feature (car feature))
        (if-let ((elt (assq feature alist)))
            (push name (cdr elt))
          (cl-pushnew (list feature name) alist))))
    (mapcar (pcase-lambda (`(,feature ,package))
              (list feature package
                    (epkg-shelved-package-p (epkg package))))
            (mapcan (pcase-lambda (`(,feature . ,providers))
                      (and (> (length providers) 1)
                           (list (list feature providers))
                           (mapcar (lambda (elt) (list feature elt))
                                   (sort providers #'string<))))
                    (cl-sort alist #'string< :key #'car))))
#+end_src
#+results: conflict
| Feature (16)                               | Package         | Shelved |
|--------------------------------------------+-----------------+---------|
| clojure-mode-convert-collection-test       | clojure-mode    |         |
| clojure-mode-convert-collection-test       | clojure-ts-mode |         |
| clojure-mode-cycling-test                  | clojure-mode    |         |
| clojure-mode-cycling-test                  | clojure-ts-mode |         |
| clojure-mode-external-interaction-test     | clojure-mode    |         |
| clojure-mode-external-interaction-test     | clojure-ts-mode |         |
| clojure-mode-font-lock-test                | clojure-mode    |         |
| clojure-mode-font-lock-test                | clojure-ts-mode |         |
| clojure-mode-indentation-test              | clojure-mode    |         |
| clojure-mode-indentation-test              | clojure-ts-mode |         |
| clojure-mode-refactor-add-arity-test       | clojure-mode    |         |
| clojure-mode-refactor-add-arity-test       | clojure-ts-mode |         |
| clojure-mode-refactor-let-test             | clojure-mode    |         |
| clojure-mode-refactor-let-test             | clojure-ts-mode |         |
| clojure-mode-refactor-rename-ns-alias-test | clojure-mode    |         |
| clojure-mode-refactor-rename-ns-alias-test | clojure-ts-mode |         |
| clojure-mode-refactor-threading-test       | clojure-mode    |         |
| clojure-mode-refactor-threading-test       | clojure-ts-mode |         |
| clojure-mode-safe-eval-test                | clojure-mode    |         |
| clojure-mode-safe-eval-test                | clojure-ts-mode |         |
| clojure-mode-sexp-test                     | clojure-mode    |         |
| clojure-mode-sexp-test                     | clojure-ts-mode |         |
| clojure-mode-syntax-test                   | clojure-mode    |         |
| clojure-mode-syntax-test                   | clojure-ts-mode |         |
| clojure-mode-util-test                     | clojure-mode    |         |
| clojure-mode-util-test                     | clojure-ts-mode |         |
| loopy-dash                                 | loopy           |         |
| loopy-dash                                 | loopy-dash      |         |
| oauth2-auto                                | oauth2-auto     |         |
| oauth2-auto                                | org-gcal        |         |
| org-plot                                   | org             |         |
| org-plot                                   | org-web-track   |         |

- 2024-07-01 org-gcal https://github.com/kidd/org-gcal.el/issues/250
- 2025-01-12 loopy https://github.com/melpa/melpa/pull/9309
- 2025-01-12 org-web-track https://github.com/p-snow/org-web-track/pull/1
- 2025-01-12 org-gcal https://github.com/kidd/org-gcal.el/issues/256

* Packages with unsatisfied dependencies
:PROPERTIES:
:ID:       df7b903f-ebf1-4803-aa97-1a4eac38b08f
:END:
#+name: unsatisfied
#+begin_src emacs-lisp :post addheader('("Package" "Class" "Feature" "Provider"),*this*)
  (mapcan
   (pcase-lambda (`(,name ,class))
     (let (alist)
       (pcase-dolist (`(,feature)
                      (epkg-sql [:select feature :from required
                                 :where (and (= package $s1)
                                             (isnull drop))]
                                name))
         (if-let ((provider (epkg-provided-by feature)))
             (when (epkg-sql [:select class :from packages
                              :where (and (= name $s1)
                                          (= class 'shelved))]
                             provider)
               (push (list feature provider) alist))
           (push (list feature nil) alist)))
       (mapcar (pcase-lambda (`(,feature ,provider))
                 (list name class feature provider))
               (cl-sort alist #'string< :key #'car))))
   (epkgs [name class] [mirrored*]))
#+end_src
#+results: unsatisfied
| Package (9)              | Class  | Feature            | Provider           |
|--------------------------+--------+--------------------+--------------------|
| eev                      | github | lean4-mode         |                    |
| evil-textobj-tree-sitter | github | tree-sitter        | tree-sitter        |
| flex-compile             | github | slite              |                    |
| gleam-ts-mode            | github | tree-sitter        | tree-sitter        |
| gleam-ts-mode            | github | tree-sitter-indent | tree-sitter-indent |
| matlab-mode              | github | semantic-dep       |                    |
| matlab-mode              | github | semantic-format    |                    |
| matlab-mode              | github | semanticdb         |                    |
| org-node                 | github | org-super-links    |                    |
| scopeline                | github | tree-sitter        | tree-sitter        |
| sdml-mode                | github | tree-sitter        | tree-sitter        |
| sdml-mode                | github | tree-sitter-hl     | tree-sitter        |
| sdml-mode                | github | tree-sitter-indent | tree-sitter-indent |
| symex                    | github | tree-sitter        | tree-sitter        |
| symex                    | github | tsc                | tree-sitter        |

- 2023-06-25 flex-compile https://github.com/plandes/flex-compile/commit/c6f7b97e96b4f2608954f8f599d255578c73d600
- 2024-06-10 tree-sitter https://github.com/emacsmirror/epkgs/commit/d7bc99e41d8cf8ef32c21a983ab61edd4c4167e6

* Missing library summary
:PROPERTIES:
:ID:       1fa0f49e-3f96-446a-a9ad-048591c91dd0
:END:
#+name: missing-summary
#+begin_src emacs-lisp :post addheader('("Package" "Class" "M"),*this*)
  (epkg--sql-keep
   (list name class
         (and (epkg-get-recipe 'melpa name) "âœ“"))
   [:select [name class]
    :from packages
    ;;:where (isnull commentary)
    :where (and (isnull summary)
                (not (= class 'builtin))
                (not (= class 'shelved)))
    :order-by [(asc name)]])
#+end_src
#+results: missing-summary

* Failing updates
