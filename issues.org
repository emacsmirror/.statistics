:PREAMBLE:
#+TITLE: Epkgs: Issues
#+SETUPFILE: .orgconfig
#+NAME: setup
#+BEGIN_SRC emacs-lisp :results silent
  (require 'emir)
#+END_SRC
[[https://emacsmirror.net/stats][up]]
:END:
* Features provided by multiple packages
#+NAME: conflict
#+BEGIN_SRC emacs-lisp
  (let (alist)
    (dolist (name (epkgs 'name))
      (dolist (feature (epkg-sql [:select feature :from provided
                                  :where (and (= package $s1)
                                              (isnull drop))]
                                 name))
        (setq feature (car feature))
        (-if-let (elt (assq feature alist))
            (push name (cdr elt))
          (cl-pushnew (list feature name) alist))))
    (epkg-with-org-header ("Feature" "Package" "Shelved")
      (mapcar (-lambda ((feature package))
                (list feature package
                      (epkg-shelved-package-p (epkg package))))
              (-mapcat (-lambda ((feature . providers))
                         (and (> (length providers) 1)
                              (list (list feature providers))
                              (--map (list feature it)
                                     (sort providers #'string<))))
                       (cl-sort alist #'string< :key #'car)))))
#+END_SRC
#+RESULTS: conflict
| Feature (1) | Package                | Shelved |
|-------------+------------------------+---------|
| setup       | projectile-trailblazer |         |
| setup       | setup                  |         |

- setup: https://github.com/micdahl/projectile-trailblazer/issues/2
Reoccuring issues:
- test-helper (see [[https://github.com/rejeep/ert-runner.el/issues/38][ert-runner#38]])

* Packages with unsatisfied dependencies
#+NAME: unsatisfied
#+BEGIN_SRC emacs-lisp
  (epkg-with-org-header ("Package" "Class" "Feature" "Provider")
    (-mapcat
     (-lambda ((name class))
       (let (alist)
	 (-each (epkg-sql [:select feature :from required
                           :where (and (= package $s1)
                                       (isnull drop))]
                          name)
           (-lambda ((feature))
             (-if-let (provider (epkg-provided-by feature))
		 (when (epkg-sql [:select class :from packages
                                  :where (and (= name $s1)
                                              (= class 'shelved))]
				 provider)
                   (push (list feature provider) alist))
               (push (list feature nil) alist))))
	 (mapcar (-lambda ((feature provider))
                   (list name class feature provider))
		 (cl-sort alist #'string< :key #'car))))
     (epkgs [name class] 'epkg-mirrored-package--eieio-childp)))
#+END_SRC
#+RESULTS: unsatisfied
| Package (4)          | Class    | Feature      | Provider    |
|----------------------+----------+--------------+-------------|
| ebdb                 | gnu-elpa | org-contacts |             |
| frontside-javascript | github   | company-lsp  | company-lsp |
| orglue               | github   | org-mac-link |             |
| python-mode          | gitlab   | org-loaddefs |             |

- frontside-javascript: https://github.com/melpa/melpa/pull/7403#issuecomment-794351381

* Packages whose repositories have been archived
Don't forget to update ~emir--archived-packages~ occasionally.
#+NAME: archived
#+BEGIN_SRC emacs-lisp
  (epkg-with-org-header ("Package" "Repository" "M" "Reverse Dependencies")
    (cl-sort
     (-keep (lambda (name)
              (and (member name emir--archived-packages)
                   (list name
                         (epkg-org-link name)
                         (and (melpa-get name) "✓")
                         ;; (and (melpa-get name) (oref (epkg name) downloads))
                         (mapconcat (pcase-lambda (`(,name . ,_features)) name)
                                    (epkg-reverse-dependencies name) " "))))
            (epkgs 'name 'epkg-mirrored-package--eieio-childp))
     #'string< :key #'car))
#+END_SRC
#+RESULTS: archived
| Package (2) | Repository             | M | Reverse Dependencies |
|-------------+------------------------+---+----------------------|
| helm-ls-hg  | [[https://github.com/emacs-helm/helm-ls-hg][emacs-helm/helm-ls-hg]]  | ✓ | helm                 |
| ox-slimhtml | [[https://github.com/balddotcat/ox-slimhtml][balddotcat/ox-slimhtml]] | ✓ | org-anki             |

- [[notmuch-tree:thread:000000000000d97b][helm-ls-hg: by mail]]
- ox-slimhtml: to be made part of Org

* Github repositories that were moved or removed
Don't forget to update ~emir--moved-packages~ occasionally.
#+NAME: github-moved
#+BEGIN_SRC emacs-lisp
  (epkg-with-org-header ("Package" "Old repository" "New repository" "M")
    (mapcar (pcase-lambda (`(,name ,old ,new))
              (list name old new
                    ;;(and (melpa-get name) (oref (epkg name) downloads))))
                    (and (melpa-get name) "✓")))
            (cl-sort (copy-sequence emir--moved-packages)
                     #'string< :key #'cadr)))
#+END_SRC
#+RESULTS: github-moved
